#include <iostream>
#include <windows.h>

using namespace std;

HANDLE CreateFileSt(){ //Cоздает проецируемый файл
    LPCWSTR  name;
    string select_file;
    cout << "Select a file:(c:\\\\file.txt and t.d. )" << endl;
    cin >> select_file;
    name =  (LPCWSTR) (select_file.c_str());
    HANDLE hfile = CreateFile((LPCSTR) name,  GENERIC_WRITE | GENERIC_READ, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hfile != INVALID_HANDLE_VALUE){
        cout << "file created" << endl;
        return CreateFileMapping(hfile, NULL, PAGE_READWRITE, 0, 128, TEXT("Local\\MyFileMappingObject")); //Cоздает проецируемый файл
    }
    else{
        cout << "error create file" << endl;
        cout << GetLastError() << endl;
        return NULL;
    }
}

int main()
{
    HANDLE Map;
    LPVOID Map_1;
    Map = CreateFileSt();
    if( Map != NULL){
        cout << "File Mapping Access!" << endl;
        Map_1 = MapViewOfFile(Map, FILE_MAP_WRITE, 0, 0, 0); //Отображает представление файла в адресное пространство вызывающего процесса
        if(Map_1 == 0 ) cout << "File not projected!" << endl;
        else{
            cout << "The file is projected!" << endl;
            CopyMemory(Map_1, TEXT("TEXT"), 5); //Копирует блок памяти из одного места в другое
            system("pause");
            UnmapViewOfFile(Map_1); //Отменяет отображение представления файла из адресного пространства вызывающего процесса
            cout << "Data recorded!" << endl;
        }
    }
    else{
        cout << "File Mapping Error!" << endl;
        cout << GetLastError() << endl;
        return 0;
    }

    return 0;
}
